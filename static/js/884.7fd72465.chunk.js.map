{"version":3,"file":"static/js/884.7fd72465.chunk.js","mappings":"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","sources":["../node_modules/cubing/src/cubing/vendor/mit/cs0x7f/fto/scramble_fto_standalone.js"],"sourcesContent":["// From https://gist.github.com/cs0x7f/1579492aa43c794d529057386c489702\n\n\"use strict\";\n\nimport { randomUIntBelow } from \"random-uint-below\";\nimport { Alg } from \"../../../../../cubing/alg\";\n\n/*\nMIT Licence\n\nCopyright (c) 2024 Chen Shuang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*\n\n*/\nvar DEBUG = false;\n\nvar mathlib = (function() {\n\tvar fact = [1];\n\tfor (var i = 0; i < 32; ++i) {\n\t\tfact[i + 1] = fact[i] * (i + 1);\n\t}\n\n\tfunction circle(arr) {\n\t\tvar length = arguments.length - 1,\n\t\t\ttemp = arr[arguments[length]];\n\t\tfor (var i = length; i > 1; i--) {\n\t\t\tarr[arguments[i]] = arr[arguments[i - 1]];\n\t\t}\n\t\tarr[arguments[1]] = temp;\n\t\treturn circle;\n\t}\n\n\tfunction getPruning(table, index) {\n\t\treturn table[index >> 3] >> ((index & 7) << 2) & 15;\n\t}\n\n\tfunction setNPerm(arr, idx, n, even) {\n\t\tvar prt = 0;\n\t\tif (even < 0) {\n\t\t\tidx <<= 1;\n\t\t}\n\t\tif (n >= 16) {\n\t\t\tarr[n - 1] = 0;\n\t\t\tfor (var i = n - 2; i >= 0; i--) {\n\t\t\t\tarr[i] = idx % (n - i);\n\t\t\t\tprt ^= arr[i];\n\t\t\t\tidx = ~~(idx / (n - i));\n\t\t\t\tfor (var j = i + 1; j < n; j--) {\n\t\t\t\t\tarr[j] >= arr[i] && arr[j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (even < 0 && (prt & 1) != 0) {\n\t\t\t\tvar tmp = arr[n - 1];\n\t\t\t\tarr[n - 1] = arr[n - 2];\n\t\t\t\tarr[n - 2] = tmp;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\tvar vall = 0x76543210;\n\t\tvar valh = 0xfedcba98;\n\t\tfor (var i = 0; i < n - 1; i++) {\n\t\t\tvar p = fact[n - 1 - i];\n\t\t\tvar v = idx / p;\n\t\t\tidx = idx % p;\n\t\t\tprt ^= v;\n\t\t\tv <<= 2;\n\t\t\tif (v >= 32) {\n\t\t\t\tv = v - 32;\n\t\t\t\tarr[i] = valh >> v & 0xf;\n\t\t\t\tvar m = (1 << v) - 1;\n\t\t\t\tvalh = (valh & m) + ((valh >> 4) & ~m);\n\t\t\t} else {\n\t\t\t\tarr[i] = vall >> v & 0xf;\n\t\t\t\tvar m = (1 << v) - 1;\n\t\t\t\tvall = (vall & m) + ((vall >>> 4) & ~m) + (valh << 28);\n\t\t\t\tvalh = valh >> 4;\n\t\t\t}\n\t\t}\n\t\tif (even < 0 && (prt & 1) != 0) {\n\t\t\tarr[n - 1] = arr[n - 2];\n\t\t\tarr[n - 2] = vall & 0xf;\n\t\t} else {\n\t\t\tarr[n - 1] = vall & 0xf;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction getNPerm(arr, n, even) {\n\t\tn = n || arr.length;\n\t\tvar idx = 0;\n\t\tif (n >= 16) {\n\t\t\tfor (var i = 0; i < n - 1; i++) {\n\t\t\t\tidx *= n - i;\n\t\t\t\tfor (var j = i + 1; j < n; j++) {\n\t\t\t\t\tarr[j] < arr[i] && idx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn even < 0 ? (idx >> 1) : idx;\n\t\t}\n\t\tvar vall = 0x76543210;\n\t\tvar valh = 0xfedcba98;\n\t\tfor (var i = 0; i < n - 1; i++) {\n\t\t\tvar v = arr[i] << 2;\n\t\t\tidx *= n - i;\n\t\t\tif (v >= 32) {\n\t\t\t\tidx += (valh >> (v - 32)) & 0xf;\n\t\t\t\tvalh -= 0x11111110 << (v - 32);\n\t\t\t} else {\n\t\t\t\tidx += (vall >> v) & 0xf;\n\t\t\t\tvalh -= 0x11111111;\n\t\t\t\tvall -= 0x11111110 << v;\n\t\t\t}\n\t\t}\n\t\treturn even < 0 ? (idx >> 1) : idx;\n\t}\n\n\tfunction getNParity(idx, n) {\n\t\tvar i, p;\n\t\tp = 0;\n\t\tfor (i = n - 2; i >= 0; --i) {\n\t\t\tp ^= idx % (n - i);\n\t\t\tidx = ~~(idx / (n - i));\n\t\t}\n\t\treturn p & 1;\n\t}\n\n\tfunction getNOri(arr, n, evenbase) {\n\t\tvar base = Math.abs(evenbase);\n\t\tvar idx = evenbase < 0 ? 0 : arr[0] % base;\n\t\tfor (var i = n - 1; i > 0; i--) {\n\t\t\tidx = idx * base + arr[i] % base;\n\t\t}\n\t\treturn idx;\n\t}\n\n\tfunction setNOri(arr, idx, n, evenbase) {\n\t\tvar base = Math.abs(evenbase);\n\t\tvar parity = base * n;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tarr[i] = idx % base;\n\t\t\tparity -= arr[i];\n\t\t\tidx = ~~(idx / base);\n\t\t}\n\t\tarr[0] = (evenbase < 0 ? parity : idx) % base;\n\t\treturn arr;\n\t}\n\n\tfunction bitCount(x) {\n\t\tx -= (x >> 1) & 0x55555555;\n\t\tx = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n\t\treturn ((x + (x >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;\n\t}\n\n\tfunction getMPerm(arr, n, cnts, cums) {\n\t\tvar seen = ~0;\n\t\tvar idx = 0;\n\t\tvar x = 1;\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\tvar pi = arr[i];\n\t\t\tidx = idx * (n - i) + bitCount(seen & ((1 << cums[pi]) - 1)) * x;\n\t\t\tx = x * cnts[pi]--;\n\t\t\tseen &= ~(1 << (cums[pi] + cnts[pi]));\n\t\t}\n\t\treturn Math.round(idx / x);\n\t}\n\n\tfunction setMPerm(arr, idx, n, cnts, x) {\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\tfor (var j = 0; j < cnts.length; j++) {\n\t\t\t\tif (cnts[j] == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar x2 = ~~(x * cnts[j] / (n - i));\n\t\t\t\tif (idx < x2) {\n\t\t\t\t\tcnts[j]--;\n\t\t\t\t\tarr[i] = j;\n\t\t\t\t\tx = x2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tidx -= x2;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n\n\t// type: 'p' (permutation), 'o' (orientation), 'c' (combination)\n\t// evenbase: base for ori, sign for even parity, cnts for combination\n\tfunction Coord(type, length, evenbase) {\n\t\tthis.length = length;\n\t\tthis.evenbase = evenbase;\n\t\tif (type == 'p') {\n\t\t\tthis.get = function(arr) {\n\t\t\t\treturn getNPerm(arr, this.length, this.evenbase);\n\t\t\t};\n\t\t\tthis.set = function(arr, idx) {\n\t\t\t\treturn setNPerm(arr, idx, this.length, this.evenbase);\n\t\t\t};\n\t\t} else if (type == 'o') {\n\t\t\tthis.get = function(arr) {\n\t\t\t\treturn getNOri(arr, this.length, this.evenbase);\n\t\t\t};\n\t\t\tthis.set = function(arr, idx) {\n\t\t\t\treturn setNOri(arr, idx, this.length, this.evenbase);\n\t\t\t};\n\t\t} else if (type == 'c') {\n\t\t\tvar cnts = evenbase;\n\t\t\tthis.cnts = cnts.slice();\n\t\t\tthis.cntn = this.cnts.length;\n\t\t\tthis.cums = [0];\n\t\t\tfor (var i = 1; i <= this.cntn; i++) {\n\t\t\t\tthis.cums[i] = this.cums[i - 1] + cnts[i - 1];\n\t\t\t}\n\t\t\tthis.n = this.cums[this.cntn];\n\t\t\tvar n = this.n;\n\t\t\tvar x = 1;\n\t\t\tfor (var i = 0; i < this.cntn; i++) {\n\t\t\t\tfor (var j = 1; j <= cnts[i]; j++, n--) {\n\t\t\t\t\tx *= n / j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.x = Math.round(x);\n\t\t\tthis.get = function(arr) {\n\t\t\t\treturn getMPerm(arr, this.n, this.cnts.slice(), this.cums);\n\t\t\t};\n\t\t\tthis.set = function(arr, idx) {\n\t\t\t\treturn setMPerm(arr, idx, this.n, this.cnts.slice(), this.x);\n\t\t\t};\n\t\t} else { // invalid type\n\t\t\tdebugger;\n\t\t}\n\t}\n\n\tfunction fillFacelet(facelets, f, perm, ori, divcol) {\n\t\tfor (var i = 0; i < facelets.length; i++) {\n\t\t\tvar cubie = facelets[i];\n\t\t\tvar p = perm[i] === undefined ? i : perm[i];\n\t\t\tif (typeof(cubie) == 'number') {\n\t\t\t\tf[cubie] = ~~(facelets[p] / divcol);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar o = ori[i] || 0;\n\t\t\tfor (var j = 0; j < cubie.length; j++) {\n\t\t\t\tf[cubie[(j + o) % cubie.length]] = ~~(facelets[p][j] / divcol);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction detectFacelet(facelets, f, perm, ori, divcol) {\n\t\tfor (var i = 0; i < facelets.length; i++) {\n\t\t\tvar n_ori = facelets[i].length;\n\t\t\touter_loop: for (var j = 0; j < facelets.length + 1; j++) {\n\t\t\t\tif (j == facelets.length) { // not matched\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (facelets[j].length != n_ori) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (var o = 0; o < n_ori; o++) {\n\t\t\t\t\tvar isMatch = true;\n\t\t\t\t\tfor (var t = 0; t < n_ori; t++) {\n\t\t\t\t\t\tif (~~(facelets[j][t] / divcol) != f[facelets[i][(t + o) % n_ori]]) {\n\t\t\t\t\t\t\tisMatch = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (isMatch) {\n\t\t\t\t\t\tperm[i] = j;\n\t\t\t\t\t\tori[i] = o;\n\t\t\t\t\t\tbreak outer_loop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction createMoveHash(initState, validMoves, hashFunc, moveFunc) {\n\t\tvar states = [initState];\n\t\tvar hash2idx = {};\n\t\tvar depthEnds = [];\n\t\thash2idx[hashFunc(initState)] = 0;\n\t\tdepthEnds[0] = 1;\n\t\tvar moveTable = [];\n\t\tfor (var m = 0; m < validMoves.length; m++) {\n\t\t\tmoveTable[m] = [];\n\t\t}\n\t\tvar tt = +new Date;\n\t\tfor (var i = 0; i < states.length; i++) {\n\t\t\tif (i == depthEnds[depthEnds.length - 1]) {\n\t\t\t\tdepthEnds.push(states.length);\n\t\t\t}\n\t\t\tif (i % 10000 == 9999) {\n\t\t\t\tDEBUG && console.log(i, 'states scanned, tt=', +new Date - tt);\n\t\t\t}\n\t\t\tvar curState = states[i];\n\t\t\tfor (var m = 0; m < validMoves.length; m++) {\n\t\t\t\tvar newState = moveFunc(curState, validMoves[m]);\n\t\t\t\tif (!newState) {\n\t\t\t\t\tmoveTable[m][i] = -1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar newHash = hashFunc(newState);\n\t\t\t\tif (!(newHash in hash2idx)) {\n\t\t\t\t\thash2idx[newHash] = states.length;\n\t\t\t\t\tstates.push(newState);\n\t\t\t\t}\n\t\t\t\tmoveTable[m][i] = hash2idx[newHash];\n\t\t\t}\n\t\t}\n\t\tDEBUG && console.log('[move hash] ' + states.length + ' states generated, tt=', +new Date - tt, JSON.stringify(depthEnds));\n\t\treturn [moveTable, hash2idx];\n\t}\n\n\tfunction createPrun(prun, init, size, maxd, doMove, N_MOVES, N_POWER, N_INV) {\n\t\tvar isMoveTable = Array.isArray(doMove);\n\t\tN_MOVES = N_MOVES || 6;\n\t\tN_POWER = N_POWER || 3;\n\t\tN_INV = N_INV || 256;\n\t\tmaxd = maxd || 256;\n\t\tfor (var i = 0, len = (size + 7) >>> 3; i < len; i++) {\n\t\t\tprun[i] = -1;\n\t\t}\n\t\tif (!Array.isArray(init)) {\n\t\t\tinit = [init];\n\t\t}\n\t\tfor (var i = 0; i < init.length; i++) {\n\t\t\tprun[init[i] >> 3] ^= 15 << ((init[i] & 7) << 2);\n\t\t}\n\t\tvar val = 0;\n\t\t// var t = +new Date;\n\t\tfor (var l = 0; l <= maxd; l++) {\n\t\t\tvar done = 0;\n\t\t\tvar inv = l >= N_INV;\n\t\t\tvar fill = (l + 1) ^ 15;\n\t\t\tvar find = inv ? 0xf : l;\n\t\t\tvar check = inv ? l : 0xf;\n\n\t\t\touter_loop: for (var p = 0; p < size; p++, val >>= 4) {\n\t\t\t\tif ((p & 7) == 0) {\n\t\t\t\t\tval = prun[p >> 3];\n\t\t\t\t\tif (!inv && val == -1) {\n\t\t\t\t\t\tp += 7;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((val & 0xf) != find) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (var m = 0; m < N_MOVES; m++) {\n\t\t\t\t\tvar q = p;\n\t\t\t\t\tfor (var c = 0; c < N_POWER; c++) {\n\t\t\t\t\t\tq = isMoveTable ? doMove[m][q] : doMove(q, m);\n\t\t\t\t\t\tif (q < 0) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (getPruning(prun, q) != check) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t++done;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tprun[p >> 3] ^= fill << ((p & 7) << 2);\n\t\t\t\t\t\t\tcontinue outer_loop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprun[q >> 3] ^= fill << ((q & 7) << 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (done == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tDEBUG && console.log('[prun]', done);\n\t\t}\n\t}\n\n\t// ida search algorithm\n\t// isSolved(state) -> boolean, in case isSolved = null, getPrun(idx) == 0 is used\n\t// getPrun(state) -> int\n\t// doMove(state) -> newState\n\t// if ckmv[last_move] >> cur_move & 1, cur_move is skipped\n\tfunction Searcher(isSolved, getPrun, doMove, N_AXIS, N_POWER, ckmv) {\n\t\tthis.isSolved = isSolved || function() { return true; };\n\t\tthis.getPrun = getPrun;\n\t\tthis.doMove = doMove;\n\t\tthis.N_AXIS = N_AXIS;\n\t\tthis.N_POWER = N_POWER;\n\t\tthis.ckmv = ckmv || valuedArray(N_AXIS, function(i) { return 1 << i; } );\n\t}\n\n\tvar _ = Searcher.prototype;\n\n\t_.solve = function(idx, minl, MAXL, callback) {\n\t\tvar sols = this.solveMulti([idx], minl, MAXL, callback);\n\t\treturn sols == null ? null : sols[0];\n\t};\n\n\t_.solveMulti = function(idxs, minl, MAXL, callback) {\n\t\tthis.callback = callback || function() { return true; };\n\t\tvar sol = [];\n\t\touter_loop: for (var l = minl; l <= MAXL; l++) {\n\t\t\tfor (var s = 0; s < idxs.length; s++) {\n\t\t\t\tthis.sidx = s;\n\t\t\t\tif (this.idaSearch(idxs[s], l, -1, sol) == 0) {\n\t\t\t\t\tbreak outer_loop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.sidx = -1;\n\t\t}\n\t\treturn this.sidx == -1 ? null : [sol, this.sidx];\n\t};\n\n\t_.idaSearch = function(idx, maxl, lm, sol) {\n\t\tvar prun = this.getPrun(idx);\n\t\tif (prun > maxl) {\n\t\t\treturn prun > maxl + 1 ? 2 : 1;\n\t\t}\n\t\tif (maxl == 0) {\n\t\t\treturn this.isSolved(idx) && this.callback(sol, this.sidx) ? 0 : 1;\n\t\t}\n\t\tif (prun == 0 && this.isSolved(idx) && maxl == 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (var axis = 0; axis < this.N_AXIS; axis++) {\n\t\t\tif (this.ckmv[lm] >> axis & 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar idx1 = Array.isArray(idx) ? idx.slice() : idx;\n\t\t\tfor (var pow = 0; pow < this.N_POWER; pow++) {\n\t\t\t\tidx1 = this.doMove(idx1, axis);\n\t\t\t\tif (idx1 == null) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsol.push([axis, pow]);\n\t\t\t\tvar ret = this.idaSearch(idx1, maxl - 1, axis, sol);\n\t\t\t\tif (ret == 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tsol.pop();\n\t\t\t\tif (ret == 2) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t};\n\n\tfunction rn(n) {\n\t\treturn randomUIntBelow(n)\n\t}\n\n\tfunction rndPerm(n, isEven) {\n\t\tvar p = 0;\n\t\tvar arr = [];\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\tarr[i] = i;\n\t\t}\n\t\tfor (var i = 0; i < n - 1; i++) {\n\t\t\tvar k = rn(n - i);\n\t\t\tcircle(arr, i, i + k);\n\t\t\tp ^= k != 0;\n\t\t}\n\t\tif (isEven && p) {\n\t\t\tcircle(arr, 0, 1);\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction valuedArray(len, val) {\n\t\tvar ret = [];\n\t\tvar isFun = typeof val == 'function';\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tret[i] = isFun ? val(i) : val;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction permOriMult(p1, p2, prod, o1, o2, ori, oriMod) {\n\t\tfor (var i = 0; i < p2.length; i++) {\n\t\t\tif (oriMod) {\n\t\t\t\tori[i] = (o1[p2[i]] + o2[i]) % oriMod;\n\t\t\t}\n\t\t\tprod[i] = p1[p2[i]];\n\t\t}\n\t}\n\n\treturn {\n\t\tbitCount: bitCount,\n\t\tgetPruning: getPruning,\n\t\tsetNOri: setNOri,\n\t\tgetNOri: getNOri,\n\t\tgetNPerm: getNPerm,\n\t\tgetNParity: getNParity,\n\t\tCoord: Coord,\n\t\tcreateMoveHash: createMoveHash,\n\t\tcreatePrun: createPrun,\n\t\tfillFacelet: fillFacelet,\n\t\tdetectFacelet: detectFacelet,\n\t\trn: rn,\n\t\tvaluedArray: valuedArray,\n\t\tSearcher: Searcher,\n\t\trndPerm: rndPerm,\n\t\tpermOriMult: permOriMult,\n\t};\n})();\n\nvar ftosolver = (function() {\n\t//face-turning octahedron cube w/o identical pieces\n\tfunction FtoCubie(cp, co, ep, uf, rl) {\n\t\tthis.cp = (cp && cp.slice()) || [0, 1, 2, 3, 4, 5];\n\t\tthis.co = (co && co.slice()) || [0, 0, 0, 0, 0, 0];\n\t\tthis.ep = (ep && ep.slice()) || [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\t\tthis.uf = (uf && uf.slice()) || [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\t\tthis.rl = (rl && rl.slice()) || [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\t}\n\n\tvar U = 0, F = 9, r = 18, l = 27, D = 36, B = 45, R = 54, L = 63;\n\n\tvar cornFacelets = [\n\t\t[U + 0, R + 0, F + 0, L + 0],\n\t\t[U + 4, B + 8, r + 4, R + 8],\n\t\t[U + 8, L + 4, l + 8, B + 4],\n\t\t[l + 0, D + 0, r + 0, B + 0],\n\t\t[F + 4, D + 8, l + 4, L + 8],\n\t\t[r + 8, D + 4, F + 8, R + 4]\n\t];\n\n\tvar edgeFacelets = [\n\t\t[U + 1, R + 3], [U + 3, L + 1], [U + 6, B + 6],\n\t\t[l + 1, D + 3], [r + 3, D + 1], [F + 6, D + 6],\n\t\t[F + 3, R + 1], [F + 1, L + 3], [l + 6, L + 6],\n\t\t[l + 3, B + 1], [r + 1, B + 3], [r + 6, R + 6]\n\t];\n\n\tvar ctufFacelets = [\n\t\tU + 2, U + 5, U + 7,\n\t\tF + 2, F + 5, F + 7,\n\t\tr + 2, r + 5, r + 7,\n\t\tl + 2, l + 5, l + 7\n\t];\n\n\tvar ctrlFacelets = [\n\t\tD + 2, D + 5, D + 7,\n\t\tB + 2, B + 5, B + 7,\n\t\tL + 2, L + 5, L + 7,\n\t\tR + 2, R + 5, R + 7\n\t];\n\n\tFtoCubie.prototype.isEqual = function(fc) {\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tif (this.ep[i] != fc.ep[i] || this.uf[i] != fc.uf[i] || this.rl[i] != fc.rl[i]\n\t\t\t\t\t|| i < 6 && (this.cp[i] != fc.cp[i] || this.co[i] != fc.co[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tFtoCubie.prototype.toFaceCube = function(todiv) {\n\t\tvar f = [];\n\t\ttodiv = todiv || 9;\n\t\tvar co = [];\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tco[i] = this.co[i] * 2;\n\t\t}\n\t\tmathlib.fillFacelet(cornFacelets, f, this.cp, co, todiv);\n\t\tmathlib.fillFacelet(edgeFacelets, f, this.ep, [], todiv);\n\t\tmathlib.fillFacelet(ctufFacelets, f, this.uf, null, todiv);\n\t\tmathlib.fillFacelet(ctrlFacelets, f, this.rl, null, todiv);\n\t\treturn f;\n\t}\n\n\tFtoCubie.prototype.fromFacelet = function(facelet) {\n\t\tvar count = 0;\n\t\tvar f = [];\n\t\tfor (var i = 0; i < 72; ++i) {\n\t\t\tf[i] = facelet[i];\n\t\t\tcount += Math.pow(16, f[i]);\n\t\t}\n\t\tif (count != 0x99999999) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar co = [];\n\t\tif (mathlib.detectFacelet(cornFacelets, f, this.cp, co, 9) == -1\n\t\t\t\t|| mathlib.detectFacelet(edgeFacelets, f, this.ep, [], 9) == -1) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar parity = 0;\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tthis.co[i] = co[i] >> 1;\n\t\t\tparity ^= this.co[i];\n\t\t}\n\t\tif (parity != 0\n\t\t\t\t|| mathlib.getNParity(mathlib.getNPerm(this.cp, 6), 6) != 0\n\t\t\t\t|| mathlib.getNParity(mathlib.getNPerm(this.ep, 12), 12) != 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tvar remainCnts = [3, 3, 3, 3];\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tvar col = f[ctufFacelets[i]];\n\t\t\tif (!(remainCnts[col] > 0)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tthis.uf[i] = col * 3 + 3 - remainCnts[col];\n\t\t\tremainCnts[col]--;\n\t\t}\n\t\tremainCnts = [3, 3, 3, 3];\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tvar col = [0, 1, 3, 2][f[ctrlFacelets[i]] - 4];\n\t\t\tif (!(remainCnts[col] > 0)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tthis.rl[i] = col * 3 + 3 - remainCnts[col];\n\t\t\tremainCnts[col]--;\n\t\t}\n\t\tif (mathlib.getNParity(mathlib.getNPerm(this.uf, 12), 12) != 0) {\n\t\t\tfor (var i = 0; i < 12; i++) { // swap 0 and 1 to fix parity\n\t\t\t\tthis.uf[i] ^= this.uf[i] < 2 ? 1 : 0;\n\t\t\t}\n\t\t}\n\t\tif (mathlib.getNParity(mathlib.getNPerm(this.rl, 12), 12) != 0) {\n\t\t\tfor (var i = 0; i < 12; i++) { // swap 0 and 1 to fix parity\n\t\t\t\tthis.rl[i] ^= this.rl[i] < 2 ? 1 : 0;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tFtoCubie.prototype.toString = function(todiv) {\n\t\tvar f = this.toFaceCube(todiv);\n\t\tvar ret = '' +\n\t\t\t'  U8 U7 U6 U5 U4      B8 B7 B6 B5 B4\\n' +\n\t\t\t'L4   U3 U2 U1   R8  r4   B3 B2 B1   l8\\n' +\n\t\t\t'L5 L1   U0   R3 R7  r5 r1   B0   l3 l7\\n' +\n\t\t\t'L6 L2 L0  R0 R2 R6  r6 r2 r0  l0 l2 l6\\n' +\n\t\t\t'L7 L3   F0   R1 R5  r7 r3   D0   l1 l5\\n' +\n\t\t\t'L8   F1 F2 F3   R4  r8   D1 D2 D3   l4\\n' +\n\t\t\t'  F4 F5 F6 F7 F8      D4 D5 D6 D7 D8';\n\t\tret = ret.replace(/([UFrlDBRL])([0-8])/g, function(m, p1, p2) {\n\t\t\tvar i = 'UFrlDBRL'.indexOf(p1) * 9 + (~~p2);\n\t\t\treturn 'UFrlDBRL' [~~(f[i] / 9)] + (f[i] % 9);\n\t\t});\n\t\treturn ret;\n\t}\n\n\tFtoCubie.FtoMult = function() {\n\t\tvar prod = arguments[arguments.length - 1] || new FtoCubie();\n\t\tfor (var k = 0; k < arguments.length; k++) {\n\t\t\tvar a = arguments[arguments.length - 1 - k];\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tprod.co[i] = k == 0 ? 0 : (a.co[prod.cp[i]] ^ prod.co[i]);\n\t\t\t\tprod.cp[i] = k == 0 ? i : a.cp[prod.cp[i]];\n\t\t\t}\n\t\t\tfor (var i = 0; i < 12; i++) {\n\t\t\t\tprod.ep[i] = k == 0 ? i : a.ep[prod.ep[i]];\n\t\t\t\tprod.uf[i] = k == 0 ? i : a.uf[prod.uf[i]];\n\t\t\t\tprod.rl[i] = k == 0 ? i : a.rl[prod.rl[i]];\n\t\t\t}\n\t\t}\n\t\treturn prod;\n\t}\n\n\tfunction initMoveCube() {\n\t\tvar rotU = new FtoCubie( //move[U]\n\t\t\t[1, 2, 0, 4, 5, 3], [0, 0, 0, 0, 0, 0], [2, 0, 1, 5, 3, 4, 10, 11, 6, 7, 8, 9],\n\t\t\t[1, 2, 0, 7, 8, 6, 10, 11, 9, 4, 5, 3], [2, 0, 1, 8, 6, 7, 11, 9, 10, 5, 3, 4]);\n\t\tvar rotR = new FtoCubie( //move[R]\n\t\t\t[5, 0, 4, 2, 3, 1], [1, 1, 0, 1, 1, 0], [6, 5, 7, 9, 2, 10, 11, 4, 3, 8, 1, 0],\n\t\t\t[5, 3, 4, 8, 6, 7, 2, 0, 1, 11, 9, 10], [4, 5, 3, 7, 8, 6, 1, 2, 0, 10, 11, 9]);\n\n\t\tvar rotUi = FtoCubie.FtoMult(rotU, rotU, null);\n\t\tvar rotRi = FtoCubie.FtoMult(rotR, rotR, null);\n\t\tvar rotL = FtoCubie.FtoMult(rotUi, rotR, rotU, null);\n\t\tvar rotF = FtoCubie.FtoMult(rotR, rotU, rotRi, null);\n\n\t\tvar moveCube = [];\n\t\tmoveCube[0] = new FtoCubie( //moveU\n\t\t\t[1, 2, 0, 3, 4, 5], [0, 0, 0, 0, 0, 0], [2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n\t\t\t[1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11], [0, 1, 2, 3, 6, 7, 11, 9, 8, 5, 10, 4]);\n\t\tmoveCube[2] = new FtoCubie( //moveF\n\t\t\t[4, 1, 2, 3, 5, 0], [1, 0, 0, 0, 1, 0], [0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11],\n\t\t\t[0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11], [0, 9, 10, 3, 4, 5, 2, 7, 1, 8, 6, 11]);\n\t\tmoveCube[4] = new FtoCubie( //mover\n\t\t\t[0, 5, 2, 1, 4, 3], [0, 1, 0, 0, 0, 1], [0, 1, 2, 3, 10, 5, 6, 7, 8, 9, 11, 4],\n\t\t\t[0, 1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11], [5, 3, 2, 11, 4, 10, 6, 7, 8, 9, 0, 1]);\n\t\tmoveCube[6] = new FtoCubie( //movel\n\t\t\t[0, 1, 3, 4, 2, 5], [0, 0, 1, 1, 0, 0], [0, 1, 2, 8, 4, 5, 6, 7, 9, 3, 10, 11],\n\t\t\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9], [8, 1, 7, 2, 0, 5, 6, 3, 4, 9, 10, 11]);\n\t\tmoveCube[8] = new FtoCubie( //moveD\n\t\t\t[0, 1, 2, 5, 3, 4], [0, 0, 0, 0, 0, 0], [0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11],\n\t\t\t[0, 1, 2, 3, 9, 10, 5, 7, 4, 8, 6, 11], [1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\n\t\tmoveCube[10] = new FtoCubie( //moveB\n\t\t\t[0, 3, 1, 2, 4, 5], [0, 1, 1, 0, 0, 0], [0, 1, 10, 3, 4, 5, 6, 7, 8, 2, 9, 11],\n\t\t\t[0, 6, 7, 3, 4, 5, 11, 9, 8, 2, 10, 1], [0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11]);\n\t\tmoveCube[12] = new FtoCubie( //moveR\n\t\t\t[5, 0, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0], [6, 1, 2, 3, 4, 5, 11, 7, 8, 9, 10, 0],\n\t\t\t[5, 3, 2, 8, 4, 7, 6, 0, 1, 9, 10, 11], [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9]);\n\t\tmoveCube[14] = new FtoCubie( //moveL\n\t\t\t[2, 1, 4, 3, 0, 5], [1, 0, 1, 0, 0, 0], [0, 8, 2, 3, 4, 5, 6, 1, 7, 9, 10, 11],\n\t\t\t[11, 1, 10, 2, 0, 5, 6, 7, 8, 9, 3, 4], [0, 1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11]);\n\t\tmoveCube[16] = FtoCubie.FtoMult(rotU, moveCube[8], null); // moveUw = [U] * D\n\t\tmoveCube[18] = FtoCubie.FtoMult(rotF, moveCube[10], null); // moveFw = [F] * B\n\t\tmoveCube[20] = FtoCubie.FtoMult(rotR, moveCube[6], null); // moveRw = [R] * l\n\t\tmoveCube[22] = FtoCubie.FtoMult(rotL, moveCube[4], null); // moveLw = [L] * r\n\n\t\tfor (var i = 1; i < 24; i += 2) {\n\t\t\tmoveCube[i] = new FtoCubie();\n\t\t\tFtoCubie.FtoMult(moveCube[i - 1], moveCube[i - 1], moveCube[i]);\n\t\t}\n\n\t\tvar moveHash = [];\n\t\tfor (var i = 0; i < 24; i ++) {\n\t\t\tmoveHash[i] = moveCube[i].ep.join(',');\n\t\t}\n\t\t//init sym\n\t\tvar symCube = [];\n\t\tvar symMult = [];\n\t\tvar symMulI = [];\n\t\tvar symMulM = [];\n\t\tvar symHash = [];\n\t\tvar fc = new FtoCubie();\n\t\tvar fc2 = new FtoCubie();\n\t\tvar tmp;\n\t\tfor (var s = 0; s < 12; s++) {\n\t\t\tsymCube[s] = new FtoCubie(fc.cp, fc.co, fc.ep, fc.uf, fc.rl);\n\t\t\tsymHash[s] = symCube[s].ep.join(',');\n\t\t\tsymMult[s] = [];\n\t\t\tsymMulI[s] = [];\n\t\t\tfc = FtoCubie.FtoMult(fc, rotU, null);\n\t\t\tif (s % 3 == 2) { // [F] or [R]\n\t\t\t\tfc = FtoCubie.FtoMult(fc, rotR, rotU, null);\n\t\t\t}\n\t\t\tif (s % 6 == 5) {\n\t\t\t\tfc = FtoCubie.FtoMult(fc, rotU, rotR, null);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tfor (var j = 0; j < 12; j++) {\n\t\t\t\tFtoCubie.FtoMult(symCube[i], symCube[j], fc);\n\t\t\t\tvar k = symHash.indexOf(fc.ep.join(','));\n\t\t\t\tsymMult[i][j] = k;\n\t\t\t\tsymMulI[k][j] = i;\n\t\t\t}\n\t\t}\n\t\tfor (var s = 0; s < 12; s++) {\n\t\t\tsymMulM[s] = [];\n\t\t\tfor (var j = 0; j < 8; j++) {\n\t\t\t\tFtoCubie.FtoMult(symCube[symMulI[0][s]], moveCube[j * 2], symCube[s], fc);\n\t\t\t\tvar k = moveHash.indexOf(fc.ep.join(','));\n\t\t\t\tsymMulM[s][j] = k >> 1;\n\t\t\t}\n\t\t}\n\t\tFtoCubie.moveCube = moveCube;\n\t\tFtoCubie.symCube = symCube;\n\t\tFtoCubie.symMult = symMult;\n\t\tFtoCubie.symMulI = symMulI;\n\t\tFtoCubie.symMulM = symMulM;\n\t};\n\n\tinitMoveCube();\n\n\tfunction ftoPermMove(key, perm, move) {\n\t\tvar ret = [];\n\t\tvar movePerm = FtoCubie.moveCube[move][key];\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tret[i] = perm[movePerm[i]];\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction ftoFullMove(fc, move) {\n\t\treturn FtoCubie.FtoMult(fc, FtoCubie.moveCube[move], null);\n\t}\n\n\tfunction phase1EdgeHash(ep) {\n\t\tvar ret = 0;\n\t\tvar e3fst = -1;\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tif ((0x38 >> ep[i] & 1) == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (e3fst == -1) {\n\t\t\t\te3fst = ep[i];\n\t\t\t}\n\t\t\tret += ((ep[i] - e3fst + 3) % 3 + 1) << i * 2;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction phase1CtrlHash(rl) {\n\t\tvar ret = 0;\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tif (rl[i] < 3) {\n\t\t\t\tret |= 1 << i;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction phase2EdgeHash(ep) {\n\t\tvar edge2group = [0, 1, 2, 3, 3, 3, 0, 1, 1, 2, 2, 0];\n\t\tvar groups = [[0, 6, 11], [1, 7, 8], [2, 9, 10], [3, 4, 5]];\n\t\tvar ret = 0;\n\t\tvar egoff = [-1, -1, -1, -1];\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tvar g = edge2group[ep[i]];\n\t\t\tvar gidx = groups[g].indexOf(ep[i]);\n\t\t\tif (egoff[g] == -1) {\n\t\t\t\tegoff[g] = gidx;\n\t\t\t}\n\t\t\tret += (g * 4 + (gidx - egoff[g] + 3) % 3) * Math.pow(16, i);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction phase2CtHash(ct) {\n\t\tvar ret = 0;\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tret |= ~~(ct[i] / 3) << (i * 2);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction phase3EdgeHash(ep) {\n\t\treturn String.fromCharCode.apply(null, ep);\n\t}\n\n\tfunction phase3CcufHash(fc) {\n\t\treturn String.fromCharCode.apply(null, [].concat(fc.cp, fc.co));\n\t}\n\n\tfunction randomMoves(validMoves, len) {\n\t\tvar scramble = [];\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tscramble.push(validMoves[~~(Math.random() * validMoves.length)]);\n\t\t}\n\t\tvar fc = new FtoCubie();\n\t\tfor (var i = 0; i < scramble.length; i++) {\n\t\t\tfc = FtoCubie.FtoMult(fc, FtoCubie.moveCube[scramble[i]], null);\n\t\t}\n\t\treturn [fc, scramble];\n\t}\n\n\tfunction genCkmv(moves) {\n\t\tvar ckmv = [];\n\t\tvar tmp1 = new FtoCubie();\n\t\tvar tmp2 = new FtoCubie();\n\t\tfor (var m1 = 0; m1 < moves.length; m1++) {\n\t\t\tckmv[m1] = 1 << m1;\n\t\t\tfor (var m2 = 0; m2 < m1; m2++) {\n\t\t\t\tFtoCubie.FtoMult(FtoCubie.moveCube[moves[m1]], FtoCubie.moveCube[moves[m2]], tmp1);\n\t\t\t\tFtoCubie.FtoMult(FtoCubie.moveCube[moves[m2]], FtoCubie.moveCube[moves[m1]], tmp2);\n\t\t\t\tif (tmp1.isEqual(tmp2)) {\n\t\t\t\t\tckmv[m1] |= 1 << m2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ckmv;\n\t}\n\n\tvar phase1Moves = [0, 2, 22, 6, 16, 10, 12, 14]; // keep the (D, DR) edge\n\tvar p1epMoves = null;\n\tvar p1rlMoves = null;\n\tvar ckmv1 = null;\n\tvar solv1 = null;\n\n\tvar pyraSymCube = [];\n\tfor (var i = 0; i < 12; i++) {\n\t\tpyraSymCube.push(new FtoCubie(\n\t\t\tFtoCubie.symCube[i].cp,\n\t\t\tFtoCubie.symCube[i].co,\n\t\t\tnull,\n\t\t\tFtoCubie.symCube[i].uf,\n\t\t\tnull\n\t\t));\n\t}\n\n\tfunction phase1Init() {\n\t\tvar fc = new FtoCubie();\n\t\tp1epMoves = mathlib.createMoveHash(fc.ep.slice(), phase1Moves, phase1EdgeHash, ftoPermMove.bind(null, 'ep'));\n\t\tp1rlMoves = mathlib.createMoveHash(fc.rl.slice(), phase1Moves, phase1CtrlHash, ftoPermMove.bind(null, 'rl'));\n\t\tvar N_P1EP = p1epMoves[0][0].length;\n\t\tvar N_P1RL = p1rlMoves[0][0].length;\n\t\tDEBUG && console.log('p1ep len=' + N_P1EP + ' p1rl len=' + N_P1RL);\n\n\t\tckmv1 = genCkmv(phase1Moves);\n\t\tvar p1eprlPrun = [];\n\t\tmathlib.createPrun(p1eprlPrun, 0, N_P1EP * N_P1RL, 14, function(idx, move) {\n\t\t\tvar rl = ~~(idx / N_P1EP);\n\t\t\tvar ep = idx % N_P1EP;\n\t\t\treturn p1rlMoves[0][move][rl] * N_P1EP + p1epMoves[0][move][ep];\n\t\t}, phase1Moves.length, 2);\n\n\t\tsolv1 = new mathlib.Searcher(null, function(idx) {\n\t\t\treturn mathlib.getPruning(p1eprlPrun, idx[1] * N_P1EP + idx[0]);\n\t\t}, function(idx, move) {\n\t\t\treturn [\n\t\t\t\tp1epMoves[0][move][idx[0]],\n\t\t\t\tp1rlMoves[0][move][idx[1]]\n\t\t\t];\n\t\t}, 8, 2, ckmv1);\n\t}\n\n\tfunction phase1GenIdxs(fc) {\n\t\tvar idxs = [];\n\t\tvar syms = [];\n\t\tvar fc2 = new FtoCubie();\n\t\tvar fc3 = new FtoCubie();\n\n\t\tfor (var sidx = 0; sidx < 12; sidx += 3) {\n\t\t\tFtoCubie.FtoMult(FtoCubie.symCube[sidx % 12], fc, fc2);\n\t\t\tvar rot;\n\t\t\tfor (rot = 0; rot < 12; rot++) {\n\t\t\t\tFtoCubie.FtoMult(fc2, FtoCubie.symCube[rot], fc3);\n\t\t\t\tif (fc3.ep[4] == 4) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar epidxs = [];\n\t\t\tvar rlidxs = [];\n\t\t\tidxs.push([\n\t\t\t\tp1epMoves[1][phase1EdgeHash(fc3.ep)],\n\t\t\t\tp1rlMoves[1][phase1CtrlHash(fc3.rl)]\n\t\t\t]);\n\t\t\tsyms.push([sidx, rot]);\n\t\t}\n\t\treturn [idxs, syms];\n\t}\n\n\tfunction phase1ProcSol(sol, solsym, fc) {\n\t\tfor (var i = 0; i < sol.length; i++) {\n\t\t\tsol[i] = phase1Moves[sol[i][0]] + sol[i][1];\n\t\t}\n\t\tvar std = move2std(sol);\n\t\tfor (var i = 0; i < std[0].length; i++) {\n\t\t\tvar move = std[0][i];\n\t\t\tsol[i] = FtoCubie.symMulM[FtoCubie.symMulI[0][solsym[1]]][move >> 1] * 2 + (move & 1);\n\t\t\tfc = FtoCubie.FtoMult(fc, FtoCubie.moveCube[sol[i]], null);\n\t\t}\n\t\tsolsym[1] = FtoCubie.symMulI[solsym[1]][std[1]];\n\t\tfc = FtoCubie.FtoMult(\n\t\t\tpyraSymCube[~~(solsym[0] / 12)], FtoCubie.symCube[solsym[0] % 12],\n\t\t\tfc, FtoCubie.symCube[solsym[1]], null\n\t\t);\n\t\treturn [fc, sol, solsym[0], solsym[1]];\n\t}\n\n\tvar N_PHASE1_SOLS = 1000;\n\n\tfunction solvePhase1(fc) {\n\t\tif (!solv1) {\n\t\t\tphase1Init();\n\t\t}\n\n\t\tvar tt = performance.now();\n\t\tvar idxs = phase1GenIdxs(fc);\n\t\tvar syms = idxs[1];\n\t\tidxs = idxs[0];\n\n\t\tvar p1sols = [];\n\n\t\tvar sol1s = solv1.solveMulti(idxs, 0, 12, function(sol, sidx) {\n\t\t\tvar param = phase1ProcSol(sol.slice(), syms[sidx].slice(), fc);\n\t\t\tp1sols.push(param);\n\t\t\treturn p1sols.length >= N_PHASE1_SOLS;\n\t\t});\n\n\t\ttt = performance.now() - tt;\n\t\tfor (var i = 0; i < p1sols.length; i++) {\n\t\t\tp1sols[i].push(tt);\n\t\t}\n\t\treturn p1sols;\n\t}\n\n\tvar phase2Moves = [0, 12, 14, 8, 10];\n\tvar p2epMoves = null;\n\tvar p2rlMoves = null;\n\tvar p2ccMoves = null;\n\tvar p2cc2ufBit = {};\n\tvar ckmv2 = null;\n\tvar solv2 = null;\n\tvar P2EPRL_MAXL = 11;\n\tvar p2symMap = [];\n\tvar ufStd2Raw = [];\n\tvar ufRaw2Std = [];\n\tvar p2ufCoord = new mathlib.Coord('c', 12, [3, 3, 3, 3]);\n\n\tvar cornExFacelets = [\n\t\t[U + 2, R + 2, F + 2, L + 2],\n\t\t[U + 5, B + 7, r + 5, R + 7],\n\t\t[U + 7, L + 5, l + 7, B + 5],\n\t\t[l + 2, D + 2, r + 2, B + 2],\n\t\t[F + 5, D + 7, l + 5, L + 7],\n\t\t[r + 7, D + 5, F + 7, R + 5]\n\t];\n\n\tfunction phase2CpcoHash(fc) {\n\t\tvar ret = String.fromCharCode.apply(null, [].concat(fc.cp, fc.co));\n\t\tif (!(ret in p2cc2ufBit)) {\n\t\t\tvar co = [];\n\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\tco[i] = fc.co[i] * 2;\n\t\t\t}\n\t\t\tvar facelet = fc.toFaceCube();\n\t\t\tmathlib.fillFacelet(cornExFacelets, facelet, fc.cp, co, 9);\n\t\t\tvar fc2 = new FtoCubie().fromFacelet(facelet);\n\t\t\tp2cc2ufBit[ret] = phase2CtHash(fc2.uf);\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// re-color the cube s.t. uf is minimized in lexicographical order\n\tfunction phase2ufStd(uf, symMap) {\n\t\tvar col1 = uf[0], col2 = -1;\n\t\tfor (var i = 1; i < 12; i++) {\n\t\t\tif (uf[i] != col1) {\n\t\t\t\tcol2 = uf[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sym = symMap[col1 * 4 + col2];\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tuf[i] = ~~(FtoCubie.symCube[sym].uf[uf[i] * 3] / 3);\n\t\t}\n\t\treturn sym;\n\t}\n\n\tfunction getPhase2ufIdx(uf) {\n\t\tvar ufstd = [];\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tufstd[i] = ~~(uf[i] / 3);\n\t\t}\n\t\tvar sym = phase2ufStd(ufstd, p2symMap);\n\t\treturn ufRaw2Std[p2ufCoord.get(ufstd)] << 4 | sym;\n\t}\n\n\tfunction phase2Init() {\n\t\tvar fc = new FtoCubie();\n\t\tp2epMoves = mathlib.createMoveHash(fc.ep.slice(), phase2Moves, phase2EdgeHash, ftoPermMove.bind(null, 'ep'));\n\t\tp2rlMoves = mathlib.createMoveHash(fc.rl.slice(), phase2Moves, phase2CtHash, ftoPermMove.bind(null, 'rl'));\n\t\tp2ccMoves = mathlib.createMoveHash(fc, phase2Moves, phase2CpcoHash, ftoFullMove);\n\n\t\tvar arr = [];\n\t\tvar arr2 = [];\n\t\tvar p2ufMoveStd = [[], [], [], [], []];\n\t\tvar ufStd2Bit = [];\n\t\tvar p2ccRecol = [];\n\t\tfor (var s = 0; s < 12; s++) {\n\t\t\tvar uf = FtoCubie.symCube[s].uf;\n\t\t\tvar col1 = ~~(uf.indexOf(0) / 3);\n\t\t\tvar col2 = ~~(uf.indexOf(3) / 3);\n\t\t\tp2symMap[col1 * 4 + col2] = s;\n\t\t\tp2ccRecol[s] = [];\n\t\t}\n\t\tout: for (var i = 0; i < 42000; i++) {\n\t\t\tp2ufCoord.set(arr, i);\n\t\t\tfor (var j = 1; j < 12; j++) {\n\t\t\t\tif (arr[j] > 1) {\n\t\t\t\t\tcontinue out;\n\t\t\t\t} else if (arr[j] == 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tufRaw2Std[i] = ufStd2Raw.length;\n\t\t\tufStd2Raw.push(i);\n\t\t}\n\t\tfor (var i = 0; i < ufStd2Raw.length; i++) {\n\t\t\tp2ufCoord.set(arr, ufStd2Raw[i]);\n\t\t\tvar hash = 0;\n\t\t\tfor (var j = 0; j < 12; j++) {\n\t\t\t\thash |= arr[j] << (j * 2);\n\t\t\t}\n\t\t\tufStd2Bit[i] = hash;\n\t\t\tfor (var m = 0; m < phase2Moves.length; m++) {\n\t\t\t\tmathlib.permOriMult(arr, FtoCubie.moveCube[phase2Moves[m]].uf, arr2);\n\t\t\t\tvar sym = phase2ufStd(arr2, p2symMap);\n\t\t\t\tp2ufMoveStd[m][i] = ufRaw2Std[p2ufCoord.get(arr2)] << 4 | sym;\n\t\t\t}\n\t\t}\n\t\tvar cc2Bit = [];\n\t\tfor (var key in p2ccMoves[1]) {\n\t\t\tvar idx = p2ccMoves[1][key];\n\t\t\tcc2Bit[idx] = p2cc2ufBit[key];\n\t\t\tvar cpco = [];\n\t\t\tfor (var s = 0; s < 12; s++) {\n\t\t\t\tvar sc = FtoCubie.symCube[s];\n\t\t\t\tfor (var i = 0; i < 6; i++) {\n\t\t\t\t\tvar scpi = key.charCodeAt(i);\n\t\t\t\t\tcpco[i] = sc.cp[scpi];\n\t\t\t\t\tcpco[i + 6] = sc.co[scpi] ^ key.charCodeAt(i + 6);\n\t\t\t\t}\n\t\t\t\tvar hash = String.fromCharCode.apply(null, cpco);\n\t\t\t\tp2ccRecol[s][idx] = p2ccMoves[1][hash];\n\t\t\t}\n\t\t}\n\t\tvar p2necPrun = [ // idx = a * 7 + b, a: #mismatch 3 U corners, b: other corners\n\t\t\t0, 0, 3, 4, 5, 6, 8,\n\t\t\t0, 2, 3, 4, 5, 6, 8,\n\t\t\t1, 2, 4, 4, 5, 6, 8,\n\t\t\t1, 3, 4, 5, 6, 7, 8,\n\t\t\t3, 3, 4, 5, 6, 7, 9,\n\t\t\t4, 4, 5, 6, 7, 8, 9,\n\t\t\t5, 5, 6, 7, 8, 9, 10\n\t\t];\n\n\t\tvar N_P2EP = p2epMoves[0][0].length;\n\t\tvar N_P2RL = p2rlMoves[0][0].length;\n\t\tvar p2eprlPrun = [];\n\t\tmathlib.createPrun(p2eprlPrun, 0, N_P2EP * N_P2RL, P2EPRL_MAXL - 2, function(idx, move) {\n\t\t\tvar rl = ~~(idx / N_P2EP);\n\t\t\tvar ep = idx % N_P2EP;\n\t\t\treturn p2rlMoves[0][move][rl] * N_P2EP + p2epMoves[0][move][ep];\n\t\t}, phase2Moves.length, 2);\n\t\tckmv2 = genCkmv(phase2Moves);\n\n\t\tsolv2 = new mathlib.Searcher(function(idx) {\n\t\t\treturn ufStd2Bit[idx[3] >> 4] == cc2Bit[p2ccRecol[idx[3] & 0xf][idx[2]]];\n\t\t}, function(idx) {\n\t\t\tvar xors = ufStd2Bit[idx[3] >> 4] ^ cc2Bit[p2ccRecol[idx[3] & 0xf][idx[2]]];\n\t\t\txors = (xors | xors >> 1) & 0x555555;\n\t\t\tvar necIdx = mathlib.bitCount(xors & 0xc0c0ff) * 7 + mathlib.bitCount(xors & 0x3f3f00);\n\t\t\treturn Math.max(\n\t\t\t\tMath.min(P2EPRL_MAXL, mathlib.getPruning(p2eprlPrun, idx[1] * N_P2EP + idx[0])),\n\t\t\t\tp2necPrun[necIdx]\n\t\t\t);\n\t\t}, function(idx, move) {\n\t\t\tvar ufidx1 = p2ufMoveStd[move][idx[3] >> 4];\n\t\t\tvar ufcol = FtoCubie.symMult[ufidx1 & 0xf][idx[3] & 0xf];\n\t\t\treturn [\n\t\t\t\tp2epMoves[0][move][idx[0]],\n\t\t\t\tp2rlMoves[0][move][idx[1]],\n\t\t\t\tp2ccMoves[0][move][idx[2]],\n\t\t\t\tufidx1 & ~0xf | ufcol,\n\t\t\t];\n\t\t}, phase2Moves.length, 2, ckmv2);\n\t}\n\n\tfunction solvePhase2(solvInfos) {\n\t\tif (!solv2) {\n\t\t\tphase2Init();\n\t\t}\n\t\tvar tt = performance.now();\n\t\tvar idxs = [];\n\t\tfor (var i = 0; i < solvInfos.length; i++) {\n\t\t\tidxs.push([\n\t\t\t\tp2epMoves[1][phase2EdgeHash(solvInfos[i][0].ep)],\n\t\t\t\tp2rlMoves[1][phase2CtHash(solvInfos[i][0].rl)],\n\t\t\t\tp2ccMoves[1][phase2CpcoHash(solvInfos[i][0])],\n\t\t\t\tgetPhase2ufIdx(solvInfos[i][0].uf)\n\t\t\t]);\n\t\t}\n\t\tvar sol2s = solv2.solveMulti(idxs, 0, 25);\n\t\tvar sol = sol2s[0];\n\t\tvar src = sol2s[1];\n\t\tvar solvInfo = solvInfos[src];\n\t\tvar fc = solvInfo[0];\n\t\tfor (var i = 0; i < sol.length; i++) {\n\t\t\tvar move = phase2Moves[sol[i][0]] + sol[i][1];\n\t\t\tsol[i] = FtoCubie.symMulM[FtoCubie.symMulI[0][solvInfo[3]]][move >> 1] * 2 + (move & 1);\n\t\t\tfc = FtoCubie.FtoMult(fc, FtoCubie.moveCube[move], null);\n\t\t}\n\t\treturn [fc, sol, solvInfo[2], solvInfo[3], src, performance.now() - tt];\n\t}\n\n\tvar phase3Moves = [8, 10, 12, 14];\n\tvar p3epMoves = null;\n\tvar p3ufMoves = null;\n\tvar p3epPrun = null;\n\tvar p3ufPrun = null;\n\tvar ckmv3 = null;\n\tvar solv3 = null;\n\n\tfunction phase3Init() {\n\t\tvar fc = new FtoCubie();\n\t\tp3epMoves = mathlib.createMoveHash(fc.ep.slice(), phase3Moves, phase3EdgeHash, ftoPermMove.bind(null, 'ep'));\n\t\tp3ufMoves = mathlib.createMoveHash(new FtoCubie(), phase3Moves, phase3CcufHash, ftoFullMove);\n\t\tp3epPrun = [];\n\t\tp3ufPrun = [];\n\t\tmathlib.createPrun(p3epPrun, 0, 81, 14, p3epMoves[0], 4, 2);\n\t\tmathlib.createPrun(p3ufPrun, 0, 11520, 14, p3ufMoves[0], 4, 2);\n\t\tckmv3 = genCkmv(phase3Moves);\n\n\t\tsolv3 = new mathlib.Searcher(null, function(idx) {\n\t\t\treturn Math.max(\n\t\t\t\tmathlib.getPruning(p3epPrun, idx[0]),\n\t\t\t\tmathlib.getPruning(p3ufPrun, idx[1])\n\t\t\t);\n\t\t}, function(idx, move) {\n\t\t\treturn [p3epMoves[0][move][idx[0]], p3ufMoves[0][move][idx[1]]];\n\t\t}, 4, 2, ckmv3);\n\t}\n\n\tfunction solvePhase3(solvInfo) {\n\t\tvar fc = solvInfo[0];\n\t\tif (!p3epPrun) {\n\t\t\tphase3Init();\n\t\t}\n\n\t\tvar tt = performance.now();\n\t\tvar p3epidx = p3epMoves[1][phase3EdgeHash(fc.ep)];\n\t\tvar p3ufidx = p3ufMoves[1][phase3CcufHash(fc)];\n\n\t\tvar sol = solv3.solve([p3epidx, p3ufidx], 0, 25);\n\n\t\tfor (var i = 0; i < sol.length; i++) {\n\t\t\tvar move = phase3Moves[sol[i][0]] + sol[i][1];\n\t\t\tsol[i] = FtoCubie.symMulM[FtoCubie.symMulI[0][solvInfo[3]]][move >> 1] * 2 + (move & 1);\n\n\t\t\tfc = FtoCubie.FtoMult(fc, FtoCubie.moveCube[move], null);\n\t\t}\n\t\treturn [fc, sol, solvInfo[2], solvInfo[3], performance.now() - tt];\n\t}\n\n\t// convert wide moves to face moves\n\tfunction move2std(moves) {\n\t\tvar sym = 0;\n\t\tvar ret = [];\n\t\t// Uw = [U] * D, Fw = [F] * B, Rw = [R] * l, Lw = [L] * r\n\t\tvar w2axis = [4, 5, 3, 2];\n\t\tvar w2rot = [1, 10, 5, 11];\n\t\tfor (var i = 0; i < moves.length; i++) {\n\t\t\tvar rot = 0;\n\t\t\tvar axis = moves[i] >> 1;\n\t\t\tvar pow = moves[i] & 1;\n\t\t\tif (axis >= 8) {\n\t\t\t\trot = w2rot[axis - 8];\n\t\t\t\taxis = w2axis[axis - 8];\n\t\t\t}\n\t\t\tif (!pow) {\n\t\t\t\trot = FtoCubie.symMult[rot][rot];\n\t\t\t}\n\t\t\tret.push(FtoCubie.symMulM[sym][axis] * 2 + pow);\n\t\t\tsym = FtoCubie.symMult[rot][sym];\n\t\t}\n\t\treturn [ret, sym];\n\t}\n\n\tfunction applyMoves(fc, moves) {\n\t\tfor (var i = 0; i < moves.length; i++) {\n\t\t\tfc = FtoCubie.FtoMult(fc, FtoCubie.moveCube[moves[i]], null);\n\t\t}\n\t\treturn fc;\n\t}\n\n\tvar move2str = [\"U\", \"U'\", \"F\", \"F'\", \"r\", \"r'\", \"l\", \"l'\", \"D\", \"D'\", \"B\", \"B'\", \"R\", \"R'\", \"L\", \"L'\"]\n\n\tfunction prettyMoves(moves) {\n\t\tvar buf = [];\n\t\tfor (var i = 0; i < moves.length; i++) {\n\t\t\tbuf[i] = move2str[moves[i]];\n\t\t}\n\t\treturn buf.join(' ').replace(/l/g, 'BL').replace(/r/g, 'BR');\n\t}\n\n\tfunction FtoSolver() {}\n\n\tFtoSolver.prototype.solveFto = function(fc, invSol) {\n\t\tif (!solv1) {\n\t\t\tvar tt = performance.now();\n\t\t\tphase1Init();\n\t\t\tphase2Init();\n\t\t\tphase3Init();\n\t\t\tDEBUG && console.log('[ftosolver] init time:', performance.now() - tt);\n\t\t}\n\t\tvar solvInfos = solvePhase1(fc);\n\n\t\tvar solvInfo2 = solvePhase2(solvInfos);\n\n\t\tvar solvInfo1 = solvInfos[solvInfo2[4]];\n\t\tthis.sol1 = solvInfo1[1].slice();\n\t\tthis.tt1 = solvInfo1[4];\n\t\tvar sym1Idx = solvInfo1[2];\n\n\t\tthis.sol2 = solvInfo2[1].slice();\n\t\tthis.tt2 = solvInfo2[5];\n\t\tsolvInfo2[0] = FtoCubie.FtoMult(pyraSymCube[FtoCubie.symMulI[0][~~(sym1Idx / 12)]], solvInfo2[0], null);\n\n\t\tvar solvInfo3 = solvePhase3(solvInfo2);\n\t\tthis.sol3 = solvInfo3[1].slice();\n\t\tthis.tt3 = solvInfo3[4];\n\n\t\tvar sol = [].concat(this.sol1, this.sol2, this.sol3);\n\t\tif (invSol) {\n\t\t\tfor (var i = 0; i < sol.length; i++) {\n\t\t\t\tsol[i] ^= 1;\n\t\t\t}\n\t\t\tsol.reverse();\n\t\t}\n\t\treturn prettyMoves(sol);\n\t}\n\n\tvar solver = new FtoSolver();\n\n\tfunction solveTest(n_moves) {\n\t\tvar solvInfo = randomMoves([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], n_moves);\n\n\t\tvar scramble = prettyMoves(solvInfo[1].slice());\n\t\tvar solution = solver.solveFto(solvInfo[0]);\n\n\t\tvar fc = solvInfo[0];\n\t\tDEBUG && console.log('scrambled state\\n', fc.toString(1));\n\t\tfc = applyMoves(fc, solver.sol1);\n\t\tDEBUG && console.log('after phase 1 (' + prettyMoves(solver.sol1) + '):\\n', fc.toString(1));\n\t\tfc = applyMoves(fc, solver.sol2);\n\t\tDEBUG && console.log('after phase 2 (' + prettyMoves(solver.sol2) + '):\\n', fc.toString(1));\n\t\tfc = applyMoves(fc, solver.sol3);\n\t\tDEBUG && console.log('after phase 3 (' + prettyMoves(solver.sol3) + '):\\n', fc.toString(1));\n\n\t\tvar facelets = fc.toFaceCube();\n\t\tvar isSolved = true;\n\t\touter_loop: for (var i = 0; i < 8; i++) {\n\t\t\tfor (var j = 1; j < 9; j++) {\n\t\t\t\tif (facelets[i * 9 + j] != facelets[i * 9]) {\n\t\t\t\t\tisSolved = false;\n\t\t\t\t\tbreak outer_loop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isSolved) {\n\t\t\tconsole.log('error, FTO not solved!!!');\n\t\t}\n\n\t\tDEBUG && console.log(scramble, solution);\n\t\treturn [\n\t\t\tsolver.sol1.length + solver.sol2.length + solver.sol3.length,\n\t\t\tsolver.sol1.length,\n\t\t\tsolver.sol2.length,\n\t\t\tsolver.sol3.length,\n\t\t\tsolver.tt1,\n\t\t\tsolver.tt2,\n\t\t\tsolver.tt3\n\t\t];\n\t}\n\n\tfunction testbench(ntest) {\n\t\tntest = ntest || 100;\n\t\tvar cumlen = [];\n\t\tfor (var nsolv = 0; nsolv < ntest; nsolv++) {\n\t\t\tvar lengths = solveTest(200);\n\t\t\tfor (var i = 0; i < lengths.length; i++) {\n\t\t\t\tcumlen[i] = (cumlen[i] || 0) + lengths[i];\n\t\t\t}\n\t\t\tconsole.log('AvgL: ', cumlen[0] / (nsolv + 1));\n\t\t}\n\t\tconsole.log('AvgL1:', cumlen[1] / ntest);\n\t\tconsole.log('AvgL2:', cumlen[2] / ntest);\n\t\tconsole.log('AvgL3:', cumlen[3] / ntest);\n\t\tconsole.log('AvgT1:', cumlen[4] / ntest);\n\t\tconsole.log('AvgT2:', cumlen[5] / ntest);\n\t\tconsole.log('AvgT3:', cumlen[6] / ntest);\n\t}\n\n\tfunction solveFacelet(facelet, invSol) {\n\t\tvar fc = new FtoCubie();\n\t\tif (fc.fromFacelet(facelet) == -1) {\n\t\t\treturn \"FTO Solver ERROR!\";\n\t\t}\n\t\treturn solver.solveFto(fc, invSol);\n\t}\n\n\treturn {\n\t\tsolveFacelet: solveFacelet,\n\t\tFtoCubie: FtoCubie,\n\t\ttestbench: testbench\n\t};\n})();\n\nvar fto_scrambler = (function() {\n\n\tfunction getRandomScramble(solvedEdge, solvedCenter, solvedCorner) {\n\t\tvar fc = new ftosolver.FtoCubie();\n\t\tif (!solvedEdge) {\n\t\t\tfc.ep = mathlib.rndPerm(12, true);\n\t\t}\n\t\tif (!solvedCenter) {\n\t\t\tfc.uf = mathlib.rndPerm(12, true);\n\t\t\tfc.rl = mathlib.rndPerm(12, true);\n\t\t}\n\t\tif (!solvedCorner) {\n\t\t\tfc.cp = mathlib.rndPerm(6, true);\n\t\t\tmathlib.setNOri(fc.co, mathlib.rn(32), 6, -2);\n\t\t}\n\t\treturn new Alg(ftosolver.solveFacelet(fc.toFaceCube(), true));\n\t}\n\n\tfunction getLNTScramble(ufs) {\n\t\tvar solved = false;\n\t\tvar nCorn = ufs.length >> 1;\n\t\tvar fc = new ftosolver.FtoCubie();\n\t\tvar cp, co, uf;\n\t\tdo {\n\t\t\tcp = mathlib.rndPerm(nCorn, true);\n\t\t\tco = mathlib.setNOri([], mathlib.rn(1 << nCorn >> 1), nCorn, -2);\n\t\t\tuf = mathlib.rndPerm(ufs.length, true);\n\t\t\tsolved = true;\n\t\t\tfor (var i = 0; i < ufs.length; i++) {\n\t\t\t\tsolved = solved && (~~(ufs[uf[i]] / 3) == ~~(ufs[i] / 3));\n\t\t\t}\n\t\t\tfor (var i = 0; i < nCorn; i++) {\n\t\t\t\tsolved = solved && cp[i] == i && co[i] == 0;\n\t\t\t}\n\t\t} while (solved);\n\t\tfor (var i = 0; i < nCorn; i++) {\n\t\t\tfc.cp[i] = cp[i];\n\t\t\tfc.co[i] = co[i];\n\t\t}\n\t\tfor (var i = 0; i < ufs.length; i++) {\n\t\t\tfc.uf[ufs[i]] = ufs[uf[i]];\n\t\t}\n\t\treturn ftosolver.solveFacelet(fc.toFaceCube(), true);\n\t}\n\n\treturn {\n\t\tgetRandomScramble: getRandomScramble.bind(null, false, false, false)\n\t};\n})();\n\n// TODO: solve an externally generated random state\nexport function getRandomFTOScramble() {\n\treturn fto_scrambler.getRandomScramble();\n};\n\n// export function setRandomGen(gen) {\n// \tmathlib.setRandomGen(gen);\n// };\n\n// export function fto_testbench() {\n// \tftosolver.testbench();\n// };\n"],"names":["mathlib","fact","i","circle","arr","length","arguments","temp","i2","getPruning","table","index","getNPerm","n","even","idx","j","vall","valh","v","getNOri","evenbase","base","Math","abs","setNOri","parity","bitCount","x","Searcher","isSolved","getPrun","doMove","N_AXIS","N_POWER","ckmv","this","valuedArray","_","prototype","rn","randomUIntBelow","len","val","ret","isFun","solve","minl","MAXL","callback","sols","solveMulti","idxs","sol","outer_loop","l","s","sidx","idaSearch","maxl","lm","prun","axis","idx1","Array","isArray","slice","pow","push","pop","getNParity","p","Coord","type","get","set","prt","tmp","m","setNPerm","cnts","cntn","cums","round","seen","pi","getMPerm","x2","setMPerm","createMoveHash","initState","validMoves","hashFunc","moveFunc","states","hash2idx","depthEnds","moveTable","curState","newState","newHash","createPrun","init","size","maxd","N_MOVES","N_INV","isMoveTable","done","inv","fill","find","check","q","c","fillFacelet","facelets","f","perm","ori","divcol","cubie","o","detectFacelet","n_ori","isMatch","t","rndPerm","isEven","k","permOriMult","p1","p2","prod","o1","o2","oriMod","ftosolver","FtoCubie","cp","co","ep","uf","rl","cornFacelets","U","R","F","L","B","r","D","edgeFacelets","ctufFacelets","ctrlFacelets","ftoPermMove","key","move","movePerm","moveCube","ftoFullMove","fc","FtoMult","phase1EdgeHash","e3fst","phase1CtrlHash","phase2EdgeHash","edge2group","groups","egoff","g","gidx","indexOf","phase2CtHash","ct","phase3EdgeHash","String","fromCharCode","apply","phase3CcufHash","concat","genCkmv","moves","tmp1","tmp2","m1","m2","isEqual","toFaceCube","todiv","fromFacelet","facelet","count","remainCnts","col","toString","replace","a","rotU","rotR","rotUi","rotRi","rotL","rotF","moveHash","join","symCube","symMult","symMulI","symMulM","symHash","initMoveCube","phase1Moves","p1epMoves","p1rlMoves","ckmv1","solv1","pyraSymCube","phase1Init","bind","N_P1EP","N_P1RL","p1eprlPrun","phase1ProcSol","solsym","std","sym","w2axis","w2rot","rot","move2std","solvePhase1","tt","performance","now","syms","fc2","fc3","phase1GenIdxs","p1sols","param","phase2Moves","p2epMoves","p2rlMoves","p2ccMoves","p2cc2ufBit","ckmv2","solv2","p2symMap","ufStd2Raw","ufRaw2Std","p2ufCoord","cornExFacelets","phase2CpcoHash","phase2ufStd","symMap","col1","col2","getPhase2ufIdx","ufstd","phase2Init","arr2","p2ufMoveStd","ufStd2Bit","p2ccRecol","out","hash","cc2Bit","cpco","sc","scpi","charCodeAt","p2necPrun","N_P2EP","N_P2RL","p2eprlPrun","P2EPRL_MAXL","idx2","xors","necIdx","max","min","ufidx1","ufcol","phase3Moves","p3epMoves","p3ufMoves","p3epPrun","p3ufPrun","ckmv3","solv3","phase3Init","applyMoves","move2str","prettyMoves","buf","FtoSolver","solveFto","invSol","solvInfos","solvInfo2","sol2s","src","solvInfo","solvePhase2","solvInfo1","sol1","tt1","sym1Idx","sol2","tt2","solvInfo3","p3epidx","p3ufidx","solvePhase3","sol3","tt3","reverse","solver","solveTest","n_moves","scramble","random","randomMoves","console","log","solveFacelet","testbench","ntest","cumlen","nsolv","lengths","fto_scrambler","getRandomScramble","solvedEdge","solvedCenter","solvedCorner","Alg","getRandomFTOScramble"],"sourceRoot":""}